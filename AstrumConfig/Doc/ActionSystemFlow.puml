@startuml ActionSystemFlow

skinparam backgroundColor #FFFFFF
skinparam sequenceMessageAlign center

title 动作系统每帧工作流程

actor "玩家输入" as Player
participant "ActionCapability" as Capability
participant "ActionComponent" as Component
participant "ActionConfigManager" as ConfigManager
participant "战斗系统" as Combat

note right of Component
  存储实体的动作状态数据
  包含所有可用的ActionInfo
  在初始化时通过ConfigManager加载
  可序列化用于网络同步
end note

note right of ConfigManager
  单例模式
  工厂类，组装ActionInfo
  从表格数据和运行时数据创建
end note

== 初始化流程 ==

group 系统初始化
    Capability -> Capability: Initialize()
    Capability -> Component: 创建ActionComponent
    
    Capability -> ConfigManager: 初始化配置管理器
    ConfigManager -> ConfigManager: 加载动作表格数据
    
    Capability -> ConfigManager: 获取所有可用动作ID
    ConfigManager --> Capability: AvailableActionIds
    
    loop 遍历所有动作ID
        Capability -> ConfigManager: GetAction(actionId, entityId)
        ConfigManager --> Capability: ActionInfo
        Capability -> Component: 存储ActionInfo
        Component -> Component: AvailableActions.Add(ActionInfo)
    end
    
    note right: 所有ActionInfo在初始化时加载完成
end

== 每帧更新流程 ==

Capability -> Capability: Tick()
activate Capability

group 1. 检查所有动作的取消条件
    Capability -> Component: 获取当前动作
    Component --> Capability: CurrentAction
    
    Capability -> Component: 获取可用动作列表
    Component --> Capability: AvailableActions
    
    ' 检查当前动作是否已结束
    alt 当前动作存在 && 动作已结束
        ' 添加默认下一个动作到预订单列表
        Capability -> Component: 获取AutoNextActionId
        Component --> Capability: NextActionId
        
        alt NextActionId有效
            Capability -> Component: 添加到预订单列表
            Component -> Component: PreorderActions.Add(NextActionInfo)
            note right: 默认下一个动作加入预订单
        end
    end
    
    ' 检查其他动作的取消条件
    loop 遍历所有动作
        Capability -> Capability: CanCancelToAction(action)
        note right
            检查CancelTag是否匹配
            当前动作的BeCancelledTag
        end note
        
        alt 可以取消
            Capability -> Capability: HasValidCommand(action)
            note right
                检查输入命令是否满足
            end note
            
            alt 命令有效
                Capability -> Component: 添加到预订单列表
                Component -> Component: PreorderActions.Add()
            end
        end
    end
end

group 2. 从预订单列表选择动作
    Capability -> Component: 获取预订单列表
    Component --> Capability: PreorderActions
    
    alt 有预订单动作
        Capability -> Capability: 按优先级排序
        Capability -> Capability: 选择最高优先级动作
        
        Capability -> Component: 获取ActionInfo
        Component --> Capability: ActionInfo
        
        Capability -> Capability: SwitchToAction()
        Capability -> Component: 更新当前动作
        Component -> Component: 设置CurrentAction
        Component -> Component: 设置CurrentActionProgress
        Component -> Component: 设置CurrentFrame
        
        Capability -> Component: 清空预订单列表
        note right: 处理所有预订单动作（默认下一个+手动输入）
    end
end

group 3. 更新当前动作
    Capability -> Component: 获取当前动作
    Component --> Capability: CurrentAction
    
    ' 按帧更新动作进度
    Capability -> Component: 更新动作帧数
    Component -> Component: CurrentFrame += 1
    Component -> Component: 计算CurrentActionProgress
    
    note right: 动作进度基于帧数计算，不依赖deltaTime
end

deactivate Capability

== 动作切换的触发方式 ==

group 输入指令切换
    Player -> Capability: 输入命令
    Capability -> Component: InputCommands.Add()
    note right: 在下一帧检查时加入预订单列表
end

group 攻击命中切换
    Combat -> Capability: 攻击命中事件
    Capability -> Component: 临时开启BeCancelledTag
    note right: 通过TempBeCancelledTag触发，加入预订单列表
end

group 自动切换
    Capability -> Component: 动作播放完成
    Component --> Capability: IsActionFinished = true
    Capability -> Component: 添加默认下一个动作到预订单
    note right: AutoNextActionId加入预订单列表，统一处理
end

@enduml