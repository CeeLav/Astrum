using Xunit;
using Astrum.LogicCore.Core;
using Astrum.LogicCore.Factories;
using Astrum.LogicCore.Archetypes;

namespace AstrumTest
{
    /// <summary>
    /// 实体系统基础测试
    /// </summary>
    [Trait("Category", "Unit")]
    [Trait("Module", "Entity")]
    public class EntitySystemTests : System.IDisposable
    {
        private readonly World _world;
        
        public EntitySystemTests()
        {
            // 每个测试前初始化
            ArchetypeManager.Instance.Initialize();
            
            _world = new World { WorldId = 1, Name = "TestWorld" };
            _world.Initialize(0);
            EntityFactory.Instance.Initialize(_world);
        }
        
        public void Dispose()
        {
            // 清理测试环境
            _world?.Dispose();
        }

        [Fact]
        public void CreateByArchetype_ValidArchetype_ShouldCreateEntity()
        {
            // Act
            var entity = EntityFactory.Instance.CreateByArchetype("BaseUnit", 0);

            // Assert
            Assert.NotNull(entity);
            Assert.True(_world.Entities.ContainsKey(entity.UniqueId));
        }
        
        [Fact]
        public void CreateByArchetype_InvalidArchetype_ShouldReturnNull()
        {
            // Act
            var entity = EntityFactory.Instance.CreateByArchetype("NonExistentArchetype", 0);

            // Assert
            Assert.Null(entity);
        }
    }
}
