
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.Skill
{
public sealed partial class SkillEffectTable : Luban.BeanBase
{
    public SkillEffectTable(ByteBuf _buf) 
    {
        SkillEffectId = _buf.ReadInt();
        EffectType = _buf.ReadInt();
        EffectValue = _buf.ReadInt();
        TargetType = _buf.ReadInt();
        EffectDuration = _buf.ReadFloat();
        EffectRange = _buf.ReadFloat();
        CastTime = _buf.ReadFloat();
        EffectParams = _buf.ReadString();
        DamageType = _buf.ReadInt();
        ScalingStat = _buf.ReadInt();
        ScalingRatio = _buf.ReadInt();
        VisualEffectId = _buf.ReadInt();
        SoundEffectId = _buf.ReadInt();
    }

    public static SkillEffectTable DeserializeSkillEffectTable(ByteBuf _buf)
    {
        return new Skill.SkillEffectTable(_buf);
    }

    /// <summary>
    /// 技能效果ID
    /// </summary>
    public readonly int SkillEffectId;
    /// <summary>
    /// 效果类型
    /// </summary>
    public readonly int EffectType;
    /// <summary>
    /// 效果数值*1000
    /// </summary>
    public readonly int EffectValue;
    /// <summary>
    /// 目标类型
    /// </summary>
    public readonly int TargetType;
    /// <summary>
    /// 效果持续时间
    /// </summary>
    public readonly float EffectDuration;
    /// <summary>
    /// 效果范围
    /// </summary>
    public readonly float EffectRange;
    /// <summary>
    /// 施法时间
    /// </summary>
    public readonly float CastTime;
    /// <summary>
    /// 效果参数
    /// </summary>
    public readonly string EffectParams;
    /// <summary>
    /// 伤害类型(1=物理/2=魔法/3=真实)
    /// </summary>
    public readonly int DamageType;
    /// <summary>
    /// 缩放属性(1=攻击/2=防御/3=生命)
    /// </summary>
    public readonly int ScalingStat;
    /// <summary>
    /// 缩放比例*1000
    /// </summary>
    public readonly int ScalingRatio;
    /// <summary>
    /// 视觉效果ID
    /// </summary>
    public readonly int VisualEffectId;
    /// <summary>
    /// 音效ID
    /// </summary>
    public readonly int SoundEffectId;
   
    public const int __ID__ = 194554857;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "skillEffectId:" + SkillEffectId + ","
        + "effectType:" + EffectType + ","
        + "effectValue:" + EffectValue + ","
        + "targetType:" + TargetType + ","
        + "effectDuration:" + EffectDuration + ","
        + "effectRange:" + EffectRange + ","
        + "castTime:" + CastTime + ","
        + "effectParams:" + EffectParams + ","
        + "damageType:" + DamageType + ","
        + "scalingStat:" + ScalingStat + ","
        + "scalingRatio:" + ScalingRatio + ","
        + "visualEffectId:" + VisualEffectId + ","
        + "soundEffectId:" + SoundEffectId + ","
        + "}";
    }
}
}

