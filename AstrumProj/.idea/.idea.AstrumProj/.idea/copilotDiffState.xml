<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Assets/Script/CommonBase/Object/DisposeObject.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/Script/CommonBase/Object/DisposeObject.cs" />
              <option name="originalContent" value="using System;&#10;using System.ComponentModel;&#10;using MongoDB.Bson.Serialization.Attributes;&#10;&#10;namespace ET&#10;{&#10;    public abstract class DisposeObject: Object, IDisposable, ISupportInitialize&#10;    {&#10;        public virtual void Dispose()&#10;        {&#10;        }&#10;        &#10;        public virtual void BeginInit()&#10;        {&#10;        }&#10;        &#10;        public virtual void EndInit()&#10;        {&#10;        }&#10;    }&#10;&#10;    public interface IPool&#10;    {&#10;        bool IsFromPool&#10;        {&#10;            get;&#10;            set;&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="using System;&#10;using System.ComponentModel;&#10;using MongoDB.Bson.Serialization.Attributes;&#10;&#10;namespace Astrum.CommonBase&#10;{&#10;    public abstract class DisposeObject: Object, IDisposable, ISupportInitialize&#10;    {&#10;        public virtual void Dispose()&#10;        {&#10;        }&#10;        &#10;        public virtual void BeginInit()&#10;        {&#10;        }&#10;        &#10;        public virtual void EndInit()&#10;        {&#10;        }&#10;    }&#10;&#10;    public interface IPool&#10;    {&#10;        bool IsFromPool&#10;        {&#10;            get;&#10;            set;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Assets/Script/CommonBase/Object/ProtoObject.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/Script/CommonBase/Object/ProtoObject.cs" />
              <option name="originalContent" value="using System;&#10;using System.ComponentModel;&#10;&#10;namespace ET&#10;{&#10;    public abstract class ProtoObject: Object, ISupportInitialize&#10;    {&#10;        public object Clone()&#10;        {&#10;            byte[] bytes = MongoHelper.Serialize(this);&#10;            return MongoHelper.Deserialize(this.GetType(), bytes, 0, bytes.Length);&#10;        }&#10;        &#10;        public virtual void BeginInit()&#10;        {&#10;        }&#10;        &#10;        &#10;        public virtual void EndInit()&#10;        {&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="using System;&#13;&#10;using System.ComponentModel;&#13;&#10;using MemoryPack;&#13;&#10;using MongoDB.Bson.Serialization.Attributes;&#13;&#10;&#13;&#10;namespace Astrum.CommonBase&#13;&#10;{&#13;&#10;    public abstract class ProtoObject: Object, ISupportInitialize&#13;&#10;    {&#13;&#10;        public object Clone()&#13;&#10;        {&#13;&#10;            byte[] bytes = MongoHelper.Serialize(this);&#13;&#10;            return MongoHelper.Deserialize(this.GetType(), bytes, 0, bytes.Length);&#13;&#10;        }&#13;&#10;        &#13;&#10;        public virtual void BeginInit()&#13;&#10;        {&#13;&#10;        }&#13;&#10;        &#13;&#10;        &#13;&#10;        public virtual void EndInit()&#13;&#10;        {&#13;&#10;        }&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>